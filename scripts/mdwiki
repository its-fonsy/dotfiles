#!/bin/bash

# mdwiki is a simple bash script to generate and manage a wiki from a group of markdown files

# dir with all markdown files
if [ -z "$MDWIKI_FOLDER" ]; then
	MDWIKI_FOLDER="$HOME/documenti/wiki"
fi

# Colored output messages
OK="[\e[32mOK\e[0m]"
ERROR="\e[31mERROR\e[0m"

MD_FOLDER="$MDWIKI_FOLDER/mds"
WIKI_OUT="$MDWIKI_FOLDER/wiki.pdf"
PDF_READER=zathura
VERBOSE=0
MERGED=0
HELP_MSG='Usage:
  mdwiki [OPTION]

Create a wiki from a group of markdown files in a folder.

Options:
  -l, --list                            List all markdown files
  -f FOLDER, --folder FOLDER            Specify the folder with all markdown files
  -o OUTPUT_PDF, --output OUTPUT_PDF    Specify the name of the pdf generated
  -m, --merged                          Output the markdown file generated
  -a MD_FILE, --add MD_FILE             Add a markdown file in the folder
  -e MD_FILE, --edit MD_FILE            Edit a markdown file in the folder
  --open                                Open the wiki with a pdf reader
  -v, --verbose                         Verbose output evrything
  -h, --help                            Show this screen.
'

# Handle arguments
while [[ $# -gt 0 ]]; do
	key="$1"

	case $key in
		-l|--list)
			for file in $MD_FOLDER/*.md; do
				echo ${file#$MD_FOLDER/}
			done
			exit 0
		;;
		-o|--output)
			WIKI_OUT="$2"
			shift
			shift
		;;
		-v|--verbose)
			VERBOSE=1
			shift
			shift
		;;
		-m|--merged)
			MERGED=1
			shift
			shift
		;;
		-f|--folder)
			MDWIKI_FOLDER="$2"
			echo 'If you want the change be permanent add

	export MDWIKI_FOLDER="YOUR_PATH"

to .bashrc or the script your shell you are using'
			shift
			shift
		;;
		-e|-a|--edit|--add)
			if [ -z "$EDITOR" ]; then
				echo -e "$ERROR: EDITOR variable empty"
				exit 1
			else
				$EDITOR $MD_FOLDER/$2
			fi
			exit 0
		;;
		--open)
			$PDF_READER $WIKI_OUT
			exit 0
		;;
		-h|--help)
			echo "$HELP_MSG"
			exit 0
		;;
	esac
done

# temp markdown file to store all data
TMP_MD="/tmp/tmp_mdwiki.md"
TMP_STYLE="/tmp/tmp_mdwiki.theme"

# Clear the temp file
echo "" > $TMP_MD

# For evry .md file in the folder write the content in tmp_mdwiki.md
PREV_CODE=0
CUR_CODE=0

[ $VERBOSE -eq 1 ] && echo "Elaborating"

for file in $MD_FOLDER/*.md; do

	[ $VERBOSE -eq 1 ] && echo -e "$OK\t${file#$MD_FOLDER/}"

	while IFS= read -r line; do

		# Check if the line begin with a tab
		[[ $line == $'\t'* ]] && CUR_CODE=1 || CUR_CODE=0

		# If the previus line wasn't tabbed then code begins
		[ $PREV_CODE -eq 0 ] && [ $CUR_CODE -eq 1 ] && echo '```bash' >> $TMP_MD

		# If the previus line was tabbed and this isn't then code end
		[ $PREV_CODE -eq 1 ] && [ $CUR_CODE -eq 0 ] && echo '```' >> $TMP_MD

		echo "$line" >> $TMP_MD
		[ $CUR_CODE -eq 1 ] && PREV_CODE=1 || PREV_CODE=0

	done < "$file"
	echo -e "\n" >> $TMP_MD

	# Prepare for a new file
	PREV_CODE=0
	CUR_CODE=0

done

# Header to break chapter and inline code highlight
HEADER='
\usepackage{fancyvrb,newverbs,xcolor}
\definecolor{Light}{HTML}{F8F8F8}
\let\oldtexttt\texttt
\renewcommand{\texttt}[1]{
  \colorbox{Light}{\oldtexttt{#1}}
}
\usepackage{sectsty}
\sectionfont{\clearpage}
'

# Style for block code
# pandoc only accept .theme files to highlight
pandoc --print-highlight-style=pygments | \
	sed '0,/null/{s/null/"#404040"/}' | \
	sed '1,/null/{s/null/"#f8f8f8"/}' > $TMP_STYLE
[ $VERBOSE -eq 1 ] && echo -e "$OK Generating .theme"

pandoc $TMP_MD \
	-f gfm \
	--include-in-header <(echo "$HEADER") \
	--highlight-style $TMP_STYLE \
	--toc \
    -V geometry:a4paper \
    -V geometry:margin=3cm \
    -V mainfont="DejaVu Serif" \
    -V monofont="DejaVu Sans Mono" \
    --pdf-engine=xelatex \
    -o $WIKI_OUT
[ $VERBOSE -eq 1 ] && echo -e "$OK Generating the pdf"

# If user want to edit the md file merged
if [ $MERGED -eq 1 ]; then
	cp $TMP_MD .
fi

[ $VERBOSE -eq 1 ] && echo "DONE"

exit 0
