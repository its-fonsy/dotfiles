#!/bin/bash

#  Backup media folder with rsync!
NAS_MNT_DIR=/nas
NAS_IP=nas-backup

# Rsync flags
RSYNC_FLAG="-rlptD --delete --stats --progress"
RSYNC_DST="$NAS_MNT_DIR/private/backup/"
RSYNC_EXCLUDE="
--exclude giochi
--exclude repo
--exclude qmk_firmware
--exclude programmi
--exclude anime
--exclude film
--exclude serie-tv
--exclude lezioni"

BACKUP_FOLDERS="
/media/documenti
/media/immagini
/media/musica
/media/video
/media/mega/unibo"

# Run as root, of course.
ROOT_UID=0
E_NOTROOT=87

CL="\033[K"	# clear the line
CR="\r"		# carriege return
UL="\033[F"

if [ "$UID" -ne "$ROOT_UID" ]
then
  echo "ERROR: Must be root to run this script."
  exit $E_NOTROOT
fi

# Ping 4 times to see if connected to the router
echo -ne "...checking if the NAS is on the local network$CR"
ping -c 4 $NAS_IP &> /dev/null || { echo -e "$CL ERROR: NAS not on the network"; exit 1; }
echo -e "$CL[OK] Nas on the network"

# Mounting the NAS
echo -ne "...mounting nas to $NAS_MNT_DIR$CR"
mount -t cifs //$NAS_IP/admin $NAS_MNT_DIR -o user=admin,vers=1.0 || { echo -e "$CL ERROR: can't mount the nas"; exit 1; }
echo -e "$CL[OK] Nas mounted to $NAS_MNT_DIR"

echo -e "...start backup\n\n"
for folder in $BACKUP_FOLDERS; do
	rsync $RSYNC_FLAG $RSYNC_EXCLUDE $folder $RSYNC_DST
done

echo -ne "...unmounting the nas$CR"
umount /nas || { echo -e "$CL ERROR: can't umount the nas"; exit 1; }
echo -e "$CL[OK] Nas unmounted"

exit 0
