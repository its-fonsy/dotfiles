#!/bin/sh

# Shutdwon or not the NAS when the backup is done
if [[ "$1" = "-s" ]]; then
	SHUTDOWN=1
else
	SHUTDOWN=0
fi

# Check if packages are installed
if ! [ -x "$(command -v borg)" ]; then
  echo 'Error: borg is not installed.' >&2
  exit 1
elif ! [ -x "$(command -v wol)" ]; then
  echo 'Error: wol is not installed.' >&2
  exit 1
fi

# NAS variables
NAS_IP=192.168.1.136
NAS_USER=root
NAS_BACKUP_DIR=/srv/dev-disk-by-label-Disco1/backup-archpc
NAS_MAC="D0:50:99:34:CD:2B"

# Check if the passphrase of the backup is set on a VARIABLE
export BORG_REPO=$NAS_USER@$NAS_IP:$NAS_BACKUP_DIR
if [ -z $BORG_PASSPHRASE ]; then
	echo -n "BORG_PASSPHRASE not set, type it now: "
	read -s user_pw
	export BORG_PASSPHRASE="$user_pw"
	echo -e "\nBORG_PASSPHRASE set correctly"
fi

# some helpers and error handling:
info() { printf "%s %s\n" "[$( date +"%H:%m:%S" )]" "$*" >&2; }
trap 'echo $( date ) Backup interrupted >&2; exit 2' INT TERM

# Waking up the NAS
max_attempt=10
attempt=0
until ping -c 3 "$NAS_IP" &> /dev/null
do

	let attempt++
	if [ $attempt -eq $max_attempt ]; then
		info "Cannot power on the NAS"
		exit 1
	fi

	if [ $attempt -eq 1 ]; then
			info "nas at $NAS_IP not power on, waking up"
		else
			info "sending WOL packet ($attempt)"
	fi
	wol $NAS_MAC &> /dev/null
	sleep 10
done

info "Starting backup"

# Backup the most important directories into an archive named after
# the machine this script is currently running on:

borg create                                  \
    --verbose                                \
    --filter AME                             \
    --list                                   \
    --stats                                  \
    --show-rc                                \
    --compression lz4                        \
    --exclude-caches                         \
    --exclude '/media/documenti/giochi/*'    \
    --exclude '/media/documenti/programmi/*' \
    --exclude '/media/video/anime/*'         \
    --exclude '/media/video/film/*'          \
    --exclude '/media/video/serie-tv//*'     \
                                             \
    ::'{hostname}-{now}'                     \
    /media/documenti				         \
    /media/musica					         \
    /media/video					         \
    /media/immagini					         \
    /media/mega/unibo				         \

backup_exit=$?

info "Pruning repository"

# Use the `prune` subcommand to maintain 3 daily, 1 weekly and 1 monthly
# archives of THIS machine. The '{hostname}-' prefix is very important to
# limit prune's operation to this machine's archives and not apply to
# other machines' archives also:

borg prune                          \
    --list                          \
    --prefix '{hostname}-'          \
    --show-rc                       \
    --keep-daily    3               \
    --keep-weekly   1               \
    --keep-monthly  1               \

prune_exit=$?

# use highest exit code as global exit code
global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

if [ ${global_exit} -eq 0 ]; then
    info "Backup and Prune finished successfully"
	if [[ $SHUTDOWN -eq 1 ]]; then
		info "Powering off the NAS"
		ssh -t $NAS_USER@$NAS_IP poweroff &> /dev/null
	fi
elif [ ${global_exit} -eq 1 ]; then
    info "Backup and/or Prune finished with warnings"
else
    info "Backup and/or Prune finished with errors"
fi

exit ${global_exit}
